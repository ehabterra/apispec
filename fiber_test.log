?   	github.com/ehabterra/swagen/cmd	[no test files]
?   	github.com/ehabterra/swagen/internal/cli	[no test files]
?   	github.com/ehabterra/swagen/internal/core	[no test files]
?   	github.com/ehabterra/swagen/internal/parser	[no test files]
?   	github.com/ehabterra/swagen/internal/spec	[no test files]
?   	github.com/ehabterra/swagen/pkg/swagen	[no test files]
=== RUN   TestChiParser_Parse
--- PASS: TestChiParser_Parse (0.00s)
=== RUN   TestEndToEnd_Chi
    e2e_chi_test.go:99: Successfully generated OpenAPI spec with request body from Chi code.
--- PASS: TestEndToEnd_Chi (0.00s)
=== RUN   TestEndToEnd_Echo
    e2e_echo_test.go:152: Actual schemas in components: [User ErrorResponse CreateUserRequest SuccessResponse UpdateUserRequest]
    e2e_echo_test.go:156: Route: GET /users -> Handler: getUsers, RequestType: 
    e2e_echo_test.go:158:   Response 0: Status=200, Type=[]User, MediaType=application/json
    e2e_echo_test.go:156: Route: GET /users/{id} -> Handler: getUser, RequestType: 
    e2e_echo_test.go:158:   Response 0: Status=400, Type=map[string]string, MediaType=application/json
    e2e_echo_test.go:158:   Response 1: Status=404, Type=ErrorResponse, MediaType=application/json
    e2e_echo_test.go:158:   Response 2: Status=200, Type=User, MediaType=application/json
    e2e_echo_test.go:156: Route: POST /users -> Handler: createUser, RequestType: CreateUserRequest
    e2e_echo_test.go:158:   Response 0: Status=400, Type=map[string]any, MediaType=application/json
    e2e_echo_test.go:158:   Response 1: Status=400, Type=ErrorResponse, MediaType=application/json
    e2e_echo_test.go:158:   Response 2: Status=400, Type=map[string]string, MediaType=application/json
    e2e_echo_test.go:158:   Response 3: Status=201, Type=SuccessResponse, MediaType=application/json
    e2e_echo_test.go:156: Route: PUT /users/{id} -> Handler: updateUser, RequestType: UpdateUserRequest
    e2e_echo_test.go:158:   Response 0: Status=400, Type=map[string]interface{}, MediaType=application/json
    e2e_echo_test.go:158:   Response 1: Status=400, Type=ErrorResponse, MediaType=application/json
    e2e_echo_test.go:158:   Response 2: Status=404, Type=map[string]string, MediaType=application/json
    e2e_echo_test.go:158:   Response 3: Status=200, Type=SuccessResponse, MediaType=application/json
    e2e_echo_test.go:156: Route: DELETE /users/{id} -> Handler: deleteUser, RequestType: 
    e2e_echo_test.go:158:   Response 0: Status=400, Type=map[string]any, MediaType=application/json
    e2e_echo_test.go:158:   Response 1: Status=404, Type=ErrorResponse, MediaType=application/json
    e2e_echo_test.go:158:   Response 2: Status=200, Type=map[string]string, MediaType=application/json
    e2e_echo_test.go:156: Route: GET /health -> Handler: healthCheck, RequestType: 
    e2e_echo_test.go:158:   Response 0: Status=200, Type=map[string]interface{}, MediaType=application/json
    e2e_echo_test.go:156: Route: GET /api/info -> Handler: getAPIInfo, RequestType: 
    e2e_echo_test.go:158:   Response 0: Status=200, Type=map[string]any, MediaType=application/json
    e2e_echo_test.go:168: OpenAPI schema for GET /users 200 response: {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        }
    e2e_echo_test.go:177: User schema in components: {
          "type": "object",
          "properties": {
            "age": {
              "type": "integer"
            },
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        }
    e2e_echo_test.go:187: JSON output (first 500 chars): {
          "openapi": "3.1.1",
          "info": {
            "title": "Echo API",
            "description": "API generated from Echo application",
            "version": "1.0.0"
          },
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "paths": {
            "/api/info": {
              "get": {
                "operationId": "getAPIInfo",
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                
    e2e_echo_test.go:214: Successfully generated OpenAPI spec from Echo code.
--- PASS: TestEndToEnd_Echo (3.66s)
=== RUN   TestEndToEnd_Gin
    e2e_gin_test.go:119: Successfully generated OpenAPI spec with request body from Gin code.
--- PASS: TestEndToEnd_Gin (0.00s)
=== RUN   TestEchoParser
=== RUN   TestEchoParser/basic_GET_route
=== RUN   TestEchoParser/POST_route_with_binding
=== RUN   TestEchoParser/route_with_path_parameters
=== RUN   TestEchoParser/multiple_routes
--- PASS: TestEchoParser (0.00s)
    --- PASS: TestEchoParser/basic_GET_route (0.00s)
    --- PASS: TestEchoParser/POST_route_with_binding (0.00s)
    --- PASS: TestEchoParser/route_with_path_parameters (0.00s)
    --- PASS: TestEchoParser/multiple_routes (0.00s)
=== RUN   TestEchoPathConversion
--- PASS: TestEchoPathConversion (0.00s)
=== RUN   TestEchoHTTPMethodDetection
--- PASS: TestEchoHTTPMethodDetection (0.00s)
=== RUN   TestFiberParser_Parse
--- PASS: TestFiberParser_Parse (0.00s)
=== RUN   TestFiberParser
=== RUN   TestFiberParser/basic_GET_route
=== RUN   TestFiberParser/POST_route_with_binding
=== RUN   TestFiberParser/route_with_path_parameters
=== RUN   TestFiberParser/multiple_routes
--- PASS: TestFiberParser (0.00s)
    --- PASS: TestFiberParser/basic_GET_route (0.00s)
    --- PASS: TestFiberParser/POST_route_with_binding (0.00s)
    --- PASS: TestFiberParser/route_with_path_parameters (0.00s)
    --- PASS: TestFiberParser/multiple_routes (0.00s)
=== RUN   TestFiberPathConversion
--- PASS: TestFiberPathConversion (0.00s)
=== RUN   TestFiberHTTPMethodDetection
--- PASS: TestFiberHTTPMethodDetection (0.00s)
=== RUN   TestGinParser_Parse
--- PASS: TestGinParser_Parse (0.00s)
PASS
ok  	github.com/ehabterra/swagen/tests/unit/parser	4.198s
